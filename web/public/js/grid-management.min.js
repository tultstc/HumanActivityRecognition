let grid,currentLayout={rows:2,cols:2,totalCells:4},gridCells=[],addedCameras=new Set;function initializeGrid(){return grid&&grid.destroy(!1),currentLayout.cols,(grid=GridStack.init({column:12,maxRow:currentLayout.rows,cellHeight:"50%",float:!0,disableResize:!0,disableDrag:!1,staticGrid:!1})).on("change",function(e,t){saveLayout()}),createEmptyCells(),grid}function createEmptyCells(){grid.removeAll(),gridCells=[],addedCameras.clear();for(let e=0;e<currentLayout.totalCells;e++){let t=Math.floor(e/currentLayout.cols),a=e%currentLayout.cols,r=Math.floor(12/currentLayout.cols),i=createEmptyCell(e);grid.makeWidget(i,{x:a*r,y:t,w:r,h:1,autoPosition:!1,noResize:!0,noMove:!1}),gridCells.push({index:e,cameraId:null,element:i})}}function createEmptyCell(e){let t=document.createElement("div");return t.className="grid-stack-item",t.setAttribute("data-cell-type","empty"),t.setAttribute("data-cell-index",e),t.innerHTML=`
    <div class="grid-stack-item-content bg-gray-100 rounded-lg flex items-center justify-center">
        <span class="text-gray-500">Camera Slot ${e+1}</span>
    </div>
`,t}function createCameraCell(e,t){let a=document.createElement("div");a.className="grid-stack-item";let r=`canvas-${e.id}`;return a.setAttribute("gridstack-id",r),a.setAttribute("data-cell-type","camera"),a.setAttribute("data-camera-id",e.id),a.innerHTML=`
    <div class="grid-stack-item-content relative">
        <canvas class="w-full h-full" id="${r}"></canvas>
    </div>
`,a}function changeLayout(e){let[t,a]=e.split("x").map(Number);currentLayout={rows:t,cols:a,totalCells:t*a},addedCameras.clear(),initializeGrid(),saveLayout()}async function loadCameras(e){try{let t=await fetch(`/dashboard/cameras?locationId=${e}`);if(!t.ok)throw Error(`HTTP error! status: ${t.status}`);let a=await t.json(),r=document.getElementById(`cameras-${e}`);r.innerHTML=a.map(e=>`
            <div class="camera-item cursor-pointer p-2 hover:bg-gray-100" 
                 onclick="assignCameraToNextCell(${JSON.stringify(e).replace(/"/g,"&quot;")})"
                 data-camera-id="${e.id}">
                <i class="fas fa-video"></i> ${e.ten}
            </div>
        `).join(""),r.style.display="block"}catch(i){console.error("Error loading cameras:",i)}}function assignCameraToNextCell(e){if(addedCameras.has(e.id)){alert("This camera has already been added to the grid.");return}let t=gridCells.find(e=>!e.cameraId)||gridCells[gridCells.length-1];if(!t){alert("No available cells to add the camera.");return}let a=Math.floor(t.index/currentLayout.cols),r=t.index%currentLayout.cols,i=Math.floor(12/currentLayout.cols),o=grid.engine.nodes.find(e=>e.x===r*i&&e.y===a);o&&grid.removeWidget(o.el);let l=createCameraCell(e,t.index);grid.makeWidget(l,{x:r*i,y:a,w:i,h:1,autoPosition:!1,noResize:!0,noMove:!1}),t.cameraId=e.id,t.element=l,addedCameras.add(e.id),initializeStream(e.id),saveLayout()}function initializeStream(e){loadPlayer({url:`ws://${window.location.hostname}:3000/api/stream/${e}`,canvas:document.getElementById(`canvas-${e}`)})}function toggleArea(e){let t=e.nextElementSibling;t.style.display="none"===t.style.display?"block":"none"}function togglePosition(e){document.querySelectorAll(".location-item").forEach(e=>{e.classList.remove("active")}),e.classList.add("active");let t=e.nextElementSibling;t.style.display="none"===t.style.display?"block":"none"}async function saveLayout(){try{let e=new Map;grid.engine.nodes.forEach(t=>{let a=t.el,r=a.getAttribute("data-cell-type"),i=a.getAttribute("data-camera-id"),o=a.getAttribute("data-cell-index"),l=`${t.x},${t.y}`;e.has(l)&&"camera"!==r||e.set(l,{id:i||`empty-slot-${o}`,type:r||"empty",x:t.x,y:t.y,w:t.w,h:t.h})});let t=Array.from(e.values()),a=await fetch("/save-layout",{method:"POST",headers:{"Content-Type":"application/json","X-CSRF-TOKEN":document.querySelector('meta[name="csrf-token"]').content},body:JSON.stringify({layout:t,gridConfig:{column:12,itemWidth:Math.floor(12/currentLayout.cols),maxRow:currentLayout.rows}})});if(!a.ok)throw Error(`HTTP error! status: ${a.status}`)}catch(r){console.error("Error saving layout:",r)}}function isCameraItem(e){return e&&"camera"===e.type&&!e.id.startsWith("empty-slot-")}async function getCameraById(e){try{let t=await fetch(`/cameras/${e}`);if(!t.ok)throw Error(`Failed to fetch camera ${e}: ${t.status}`);let a=await t.json();if(!a)throw Error(`No camera found with ID ${e}`);return a}catch(r){return console.error("Error in getCameraById:",r),null}}function validateLayoutData(e){return!!Array.isArray(e)&&e.every(e=>e&&"string"==typeof e.id&&"string"==typeof e.type&&"number"==typeof e.x&&"number"==typeof e.y&&"number"==typeof e.w&&"number"==typeof e.h)}function assignCameraToCell(e,t,a){if(addedCameras.has(e.id))return;let r=Math.floor(12/currentLayout.cols),i=createCameraCell(e);grid.makeWidget(i,{x:t,y:a,w:r,h:1,autoPosition:!1,noResize:!0,noMove:!1}),addedCameras.add(e.id),initializeStream(e.id)}document.addEventListener("DOMContentLoaded",async()=>{try{let e=await fetch("/get-layout"),t=await e.json();if(t.gridConfig){let a=12/t.gridConfig.itemWidth;currentLayout={rows:2,cols:a,totalCells:2*a}}if(initializeGrid(),t.layout&&Array.isArray(t.layout)){let r=t.layout.filter(isCameraItem);for(let i of r)try{let o=i.id,l=await getCameraById(o);if(l){let n=i.x/(12/currentLayout.cols),s=i.y,d=s*currentLayout.cols+n,c=gridCells[d];if(c){c.element&&grid.removeWidget(c.element);let u=createCameraCell(l,d);grid.makeWidget(u,{x:i.x,y:i.y,w:i.w,h:i.h,autoPosition:!1,noResize:!0,noMove:!1}),c.cameraId=l.id,c.element=u,addedCameras.add(l.id),initializeStream(l.id)}}}catch(m){console.error(`Error restoring camera ${i.id}:`,m)}}document.querySelectorAll("#layoutOptions .location-item").forEach(e=>{e.addEventListener("click",()=>{let t=e.getAttribute("data-layout");changeLayout(t)})})}catch(y){console.error("Error initializing dashboard:",y),initializeGrid()}});